import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Pikachu_LOL_Auction {
    public static void main(String[] args) {
        int n;
        Scanner sc = new Scanner(System.in);

        //전체 참가자 수 설정하고 전체 참가 인원 작성성
        System.out.print("전체 인원 수 : ");
        n = sc.nextInt();

        String [] total_name = new String[n];

        for(int i=0;i< total_name.length;i++){
            System.out.print(i+1 + "번째 사람의 이름을 적어주세요 : (이름을 바꾸시려면 변경, 처음부터 입력하려면 다시를 입력하세요.)");
            String join = sc.next();
            if(join.equals("변경")){
                i=i-2;
                continue;
            }
            else if(join.equals("다시")){
                i=-1;
                continue;
            }
            else {
                total_name[i] = join;
            }
            System.out.print("현재 참여 인원 : ");
            for(int j=0;j<i+1;j++){
                System.out.print(total_name[j]+" ");
            }
            System.out.println("");

        }
        System.out.println(" ");

        System.out.print("전체 참가자입니다 : ");
        for(int i=0;i< total_name.length;i++){
            System.out.print(total_name[i]+" ");
        }
        System.out.println(" ");

        int boss_num=n/4;

        String [] boss = new String[boss_num]; //팀장

        System.out.println(" ");


        for(int i=0;i<boss_num;i++){
            System.out.print("팀장의 이름을 적어주세요 : (이름을 바꾸시려면 변경, 처음부터 입력하려면 다시를 입력하세요.)");
            String boss_name=sc.next();
            if(boss_name.equals("변경")){
                i=i-2;
                continue;
            }
            else if(boss_name.equals("다시")){
                i=-1;
                continue;
            }
            else{
                boss[i]=boss_name;
            }
            System.out.print("현재 팀장 : ");
            for(int j=0;j<i+1;j++){
                System.out.print(boss[j]+" ");
            }
            System.out.println("");
        }
        //경매 진행

        int max = 1000;
        int [] boss_point = new int [boss_num];
        for(int i=0;i<boss_point.length;i++){
            boss_point[i]=max;
        }

        //참가자 순서 섞기
        Collections.shuffle(Arrays.asList(total_name));

        int size=0;
        for(String temp : total_name){
            total_name[size++]=temp;
        }

        System.out.println(" ");
        System.out.println("잠시 후 경매가 시작됩니다!");
        Thread t = new Thread(new Timer());
        t.start();
        try {
            t.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println(" ");

        ArrayList<String> player = new ArrayList<>();
        for(String temp : total_name) {
            player.add(temp);
        }

        int num = player.size();
        //팀장 수만큼 팀 생성
        String [][] team = new String[boss_num][5];
        for(int i=0;i<boss_num;i++){
            team[i][0]=boss[i];
        }

        //팀원 뽑기
        int member = 0;
        int count=0;
        while(player.size()!=0){
            System.out.println(" ");

            System.out.print(count + "번째 선수는 '"+player.indexOf(count)+"' 선수입니다!");

            System.out.println(" ");
            System.out.println(" ");


            String name = null;
            int point=0;
            while(name!="마감"){
                System.out.print("경매를 시작합니다! "+player.indexOf(count)+"선수를 원하시는 팀장님의 이름과 포인트를 적어주세요(경매가 종료되면 마감을 입력해주세요: ");
                name = sc.next();
                point = sc.nextInt();
            }
            for(int i=0;i<boss.length;i++){
                if(boss[i].equals(name)){
                    member = i;
                }
            }
            player.remove(name);
            for(int i=0;i<team.length;i++) {
                if(team[member][i]!=null) {
                    team[member][i] = name;
                }
                break;
            }
            count++;
            boss_point[member]=boss_point[member]-point;
            System.out.println(" ");
            System.out.println("==========현재 팀===========");
            for (int i = 0; i < team.length; i++) {
                String [] inArr = team[i];
                for (int j = 0; j < inArr.length; j++) {
                    if(inArr[j]==null){
                        continue;
                    }
                    else
                        System.out.print("["+inArr[j] + "] ");
                }
                System.out.println();
            }




        }
        System.out.println(" ");
        System.out.println("팀 선정이 끝났습니다");

        //전체 팀 출력

        for (int i = 0; i < team.length; i++) {
            System.out.print("<"+boss[i]+"> 팀 : ");
            String [] inArr = team[i];
            for (int j = 0; j < inArr.length; j++) {
                if(inArr[j]==null){
                    continue;
                }
                else
                    System.out.print("["+inArr[j] + "] ");
            }
            System.out.println();
        }

        //게임 순서 정하기
        System.out.println(" ");
        System.out.println("게임 순서는 다음과 같습니다");
        for(int i=0;i<boss_num;i++){
            System.out.print((i+1)+".["+boss[i]+"]팀 ");
        }

        System.out.println(" ");

        while(true){
            System.out.println("끝내시려면 아무 키나 입력후 엔터를 눌러주세요");
            String exit = sc.next();
            char myChar = exit.charAt(0);
            if(myChar>0){
                break;
            }
        }

    }
}
